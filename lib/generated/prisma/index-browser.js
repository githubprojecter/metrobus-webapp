
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  idFirebase: 'idFirebase',
  role: 'role',
  nombre: 'nombre',
  apellidoPaterno: 'apellidoPaterno',
  apellidoMaterno: 'apellidoMaterno',
  profilePhotoUrl: 'profilePhotoUrl',
  telefono: 'telefono',
  correo: 'correo'
};

exports.Prisma.OperadorScalarFieldEnum = {
  id: 'id',
  userRoleId: 'userRoleId',
  unidadAsignada: 'unidadAsignada',
  rutaAsignada: 'rutaAsignada'
};

exports.Prisma.BotonPanicoScalarFieldEnum = {
  id: 'id',
  operadorId: 'operadorId',
  timestamp: 'timestamp',
  motivo: 'motivo',
  atendido: 'atendido',
  latitud: 'latitud',
  longitud: 'longitud'
};

exports.Prisma.SupervisorScalarFieldEnum = {
  id: 'id',
  userRoleId: 'userRoleId'
};

exports.Prisma.UbicacionSupervisorScalarFieldEnum = {
  id: 'id',
  supervisorId: 'supervisorId',
  timestamp: 'timestamp',
  latitud: 'latitud',
  longitud: 'longitud'
};

exports.Prisma.CoordinadorScalarFieldEnum = {
  id: 'id',
  userRoleId: 'userRoleId'
};

exports.Prisma.IncidenteAsignadoScalarFieldEnum = {
  id: 'id',
  supervisorId: 'supervisorId',
  fechaAsignacion: 'fechaAsignacion',
  reporteIncidenteId: 'reporteIncidenteId'
};

exports.Prisma.ReporteIncidenteScalarFieldEnum = {
  id: 'id',
  supervisorId: 'supervisorId',
  fecha: 'fecha',
  descripcion: 'descripcion',
  ambulancia: 'ambulancia',
  policia: 'policia',
  heridos: 'heridos'
};

exports.Prisma.FotoIncidenteScalarFieldEnum = {
  id: 'id',
  reporteId: 'reporteId',
  url: 'url',
  createdAt: 'createdAt'
};

exports.Prisma.PatioScalarFieldEnum = {
  id: 'id',
  userRoleId: 'userRoleId'
};

exports.Prisma.RegistroSalidaUnidadScalarFieldEnum = {
  id: 'id',
  patioId: 'patioId',
  unidad: 'unidad',
  operadorId: 'operadorId',
  fechaSalida: 'fechaSalida',
  horaInicio: 'horaInicio',
  vueltas: 'vueltas',
  kmInicial: 'kmInicial',
  kmFinal: 'kmFinal',
  condiciones: 'condiciones'
};

exports.Prisma.AsignacionUnidadScalarFieldEnum = {
  id: 'id',
  patioId: 'patioId',
  operadorId: 'operadorId',
  unidad: 'unidad',
  ruta: 'ruta',
  fecha: 'fecha'
};

exports.Prisma.DeviceTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userRoleId: 'userRoleId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserRoleOrderByRelevanceFieldEnum = {
  idFirebase: 'idFirebase',
  nombre: 'nombre',
  apellidoPaterno: 'apellidoPaterno',
  apellidoMaterno: 'apellidoMaterno',
  profilePhotoUrl: 'profilePhotoUrl',
  telefono: 'telefono',
  correo: 'correo'
};

exports.Prisma.OperadorOrderByRelevanceFieldEnum = {
  unidadAsignada: 'unidadAsignada',
  rutaAsignada: 'rutaAsignada'
};

exports.Prisma.BotonPanicoOrderByRelevanceFieldEnum = {
  motivo: 'motivo'
};

exports.Prisma.ReporteIncidenteOrderByRelevanceFieldEnum = {
  descripcion: 'descripcion'
};

exports.Prisma.FotoIncidenteOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.RegistroSalidaUnidadOrderByRelevanceFieldEnum = {
  unidad: 'unidad',
  horaInicio: 'horaInicio',
  condiciones: 'condiciones'
};

exports.Prisma.AsignacionUnidadOrderByRelevanceFieldEnum = {
  unidad: 'unidad',
  ruta: 'ruta'
};

exports.Prisma.DeviceTokenOrderByRelevanceFieldEnum = {
  token: 'token'
};
exports.Role = exports.$Enums.Role = {
  Coordinador: 'Coordinador',
  Operador: 'Operador',
  Supervisor: 'Supervisor',
  Dirección: 'Dirección',
  Patio: 'Patio'
};

exports.Prisma.ModelName = {
  UserRole: 'UserRole',
  Operador: 'Operador',
  BotonPanico: 'BotonPanico',
  Supervisor: 'Supervisor',
  UbicacionSupervisor: 'UbicacionSupervisor',
  Coordinador: 'Coordinador',
  IncidenteAsignado: 'IncidenteAsignado',
  ReporteIncidente: 'ReporteIncidente',
  FotoIncidente: 'FotoIncidente',
  Patio: 'Patio',
  RegistroSalidaUnidad: 'RegistroSalidaUnidad',
  AsignacionUnidad: 'AsignacionUnidad',
  DeviceToken: 'DeviceToken'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
